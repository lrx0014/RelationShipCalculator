<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="AppUIBasics.ControlPages.GridViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppUIBasics.ControlPages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="using:AppUIBasics.Common"
    mc:Ignorable="d"
    xmlns:data="using:AppUIBasics.Data">
    <Page.Resources>

        <DataTemplate x:Key="ImageOverlayTemplate" x:DataType="data:ControlInfoDataGroup">
            <StackPanel Height="130" Width="190" Margin="4,4,4,8">
                <TextBlock Text="{x:Bind Title}" 
                       Margin="8,4" Width="186" Style="{StaticResource BaseTextBlockStyle}" HorizontalAlignment="Left"/>
                <Image Source="{x:Bind ImagePath}" Margin="8,0,8,8" Stretch="UniformToFill"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="IconTextTemplate" x:DataType="data:ControlInfoDataGroup">
            <StackPanel Orientation="Horizontal" Width="280">
                <Image Source="{x:Bind ImagePath}" Width="45" Height="45" Margin="8" Stretch="UniformToFill"/>
                <StackPanel VerticalAlignment="Center" Margin="8,0">
                    <TextBlock Text="{x:Bind Title}" Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock Text="{x:Bind Subtitle}" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ImageTextTemplate" x:DataType="data:ControlInfoDataGroup">
            <StackPanel Orientation="Horizontal" Width="500" Height="130">
                <Image Source="{x:Bind ImagePath}" Stretch="Fill" Height="110" Width="110" Margin="8,8,0,8"/>
                <StackPanel Width="350" Margin="8,8,0,0" VerticalAlignment="Center">
                    <TextBlock Text="{x:Bind Title}" Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock Text="{x:Bind Subtitle}"  Style="{StaticResource CaptionTextBlockStyle}"/>
                    <TextBlock Text="{x:Bind Description}" TextWrapping="Wrap" Margin="0,8,0,0"/>
                </StackPanel>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate" x:DataType="data:ControlInfoDataGroup">
            <StackPanel Orientation="Horizontal" Width="300">
                <TextBlock Text="{x:Bind Title}" Style="{StaticResource BaseTextBlockStyle}" Margin="8,0,0,0"/>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>

    <RelativePanel>

        <local:ControlExample x:Name="Example1" HeaderText="Content inside of a GridView.">
            <GridView x:Name="Control1" ItemsSource="{x:Bind Groups}"
                          ItemTemplate="{StaticResource ImageOverlayTemplate}"
                          CanDragItems="{x:Bind DragCheckBox.IsChecked.Value, Mode=OneWay}" 
                          IsItemClickEnabled="{x:Bind ItemClickCheckBox.IsChecked.Value, Mode=OneWay}" 
                          IsSwipeEnabled="{x:Bind SwipeCheckBox.IsChecked.Value, Mode=OneWay}"
                          SelectionChanged="Control1_SelectionChanged" ItemClick="Control1_ItemClick" />
        </local:ControlExample>

        <local:ControlExample x:Name="ExampleAccessories" HeaderText="Select different looks for the GridView.">
            <StackPanel x:Name="Control2" Orientation="Horizontal" Grid.Row="1">
                <StackPanel Margin="10,0,0,0">
                    <TextBlock Text="ItemTemplate" FontSize="16" Margin="12,9,0,10"/>
                    <RadioButton Content="Image overlay" GroupName="Template" Tag="ImageOverlayTemplate" Click="ItemTemplate_Click" IsChecked="True"/>
                    <RadioButton Content="Icon/Text" GroupName="Template" Tag="IconTextTemplate" Click="ItemTemplate_Click"/>
                    <RadioButton Content="Image/Text" GroupName="Template" Tag="ImageTextTemplate" Click="ItemTemplate_Click"/>
                    <RadioButton Content="Text" GroupName="Template" Tag="TextTemplate" Click="ItemTemplate_Click"/>

                    <ToggleButton Content="Reverse FlowDirection" Click="FlowDirectionCheckBox_Click" Margin="0,4,0,0" />
                </StackPanel>

                <StackPanel Margin="10,0,0,0">
                    <TextBlock Text="GridView Properties" FontSize="16" Margin="12,9,0,10"/>
                    <CheckBox x:Name="ItemClickCheckBox" Content="IsItemClickEnabled" Click="ItemClickCheckBox_Click"/>
                    <CheckBox x:Name="SwipeCheckBox" Content="IsSwipeEnabled" />
                    <CheckBox x:Name="DragCheckBox" Content="CanDragItems" />
                    <ComboBox SelectionChanged="SelectionModeComboBox_SelectionChanged" Header="SelectionMode" SelectedIndex="1" Margin="0,12,0,0">
                        <x:String>None</x:String>
                        <x:String>Single</x:String>
                        <x:String>Multiple</x:String>
                        <x:String>Extended</x:String>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
            <local:ControlExample.Xaml>
                <RichTextBlock>
                    <Paragraph>&lt;GridView ItemsSource="{x:Bind Groups}"</Paragraph>
                    <Paragraph TextIndent="36">ItemTemplate="{StaticResource
                        <Run x:Name="itemTemplate">ImageOverlayTemplate</Run> }"
                    </Paragraph>
                    <Paragraph TextIndent="36">IsItemClickEnabled="
                        <Run Text="{x:Bind Control1.IsItemClickEnabled, Converter={StaticResource valueToStringConverter}, Mode=OneWay}"></Run> "
                    </Paragraph>
                    <Paragraph TextIndent="36">IsSwipeEnabled="
                        <Run Text="{x:Bind Control1.IsSwipeEnabled, Converter={StaticResource valueToStringConverter}, Mode=OneWay}"/> "
                    </Paragraph>
                    <Paragraph TextIndent="36">CanDragItems="
                        <Run Text="{x:Bind Control1.CanDragItems, Converter={StaticResource valueToStringConverter}, Mode=OneWay}"/> "
                    </Paragraph>
                    <Paragraph TextIndent="36">SelectionMode="
                        <Run Text="{x:Bind Control1.SelectionMode, Converter={StaticResource valueToStringConverter}, Mode=OneWay}"/> "
                    </Paragraph>
                    <Paragraph TextIndent="36">SelectionChanged="Control1_SelectionChanged"</Paragraph>
                    <Paragraph TextIndent="36">ItemClick="Control1_ItemClick" /&gt;</Paragraph>
                </RichTextBlock>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <StackPanel RelativePanel.Below="Example1">
            <TextBlock x:Name="ClickOutput" Style="{StaticResource OutputTextBlockStyle}" />
            <TextBlock x:Name="SelectionOutput" Style="{StaticResource OutputTextBlockStyle}"/>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <!-- Visual states reflect the application's window size -->
            <VisualStateGroup>
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Example1.(RelativePanel.RightOf)" Value="ExampleAccessories" />
                        <Setter Target="Example1.Margin" Value="24,0,0,0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Example1.(RelativePanel.Below)" Value="ExampleAccessories" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>