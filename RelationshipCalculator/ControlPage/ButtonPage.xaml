<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="AppUIBasics.ControlPages.ButtonPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppUIBasics.ControlPages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="customButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Rectangle x:Name="Border" Stroke="Black" Fill="Orange" Margin="-5"/>
                                <ContentPresenter x:Name="Content"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- This is the style that defines the "Refresh" button with the arrow. 
          Note that instead of using a graphic for the arrow the we are
          using the arrow character in the Segoe UI Symbol font. This keeps us from 
          having to define a graphic and enables us to style the individual 
          pieces of the button independently. -->
        <Style x:Key="RefreshButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <StackPanel Orientation="Vertical">
                                <Grid  Margin="0,14,0,5" >
                                    <Ellipse x:Name="ButtonEllipse" Height="40" Width="40" Fill="Transparent" HorizontalAlignment="Center"
                                        Stroke="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="Glyph" Text="&#xE10E;" FontFamily="Segoe UI Symbol" FontSize="24.777" HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Grid>
                                <TextBlock x:Name="Content" Text="{TemplateBinding Content}" HorizontalAlignment="Center"
                                    FontFamily="Segoe UI" FontSize="12"/>
                            </StackPanel>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonEllipse" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="Blue" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonEllipse" />
                                            <ColorAnimation Duration="0" To="Green" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Content" />
                                            <ColorAnimation Duration="0" To="Green" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Glyph" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <RelativePanel>
        <StackPanel x:Name="LeftColumn" MaxWidth="500">
            <local:ControlExample x:Name="Example1" HeaderText="A simple Button with text content.">
                <local:ControlExample.Example>
                    <RelativePanel>
                        <CheckBox x:Name="DisableButton1" Content="Disable button" />
                        <Button x:Name="Button1" Content="Button" Click="Button_Click" IsEnabled="{x:Bind DisableButton1.IsChecked, Converter={StaticResource negationConverter}, Mode=OneWay}" RelativePanel.Below="DisableButton1" />
                        <TextBlock x:Name="Control1Output" Margin="8,0,0,0" FontFamily="Global User Interface" RelativePanel.RightOf="Button1" RelativePanel.AlignVerticalCenterWith="Button1"/>
                    </RelativePanel>
                </local:ControlExample.Example>
                <local:ControlExample.Xaml>
                    <RichTextBlock>
                        <Paragraph>&lt;Button Content="Button" Click="Button_Click"/&gt;</Paragraph>
                    </RichTextBlock>
                </local:ControlExample.Xaml>
            </local:ControlExample>

            <local:ControlExample x:Name="Example2" HeaderText="A Button with graphical content.">
                <local:ControlExample.Example>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="Button2" Click="Button_Click">
                            <Image Source="/Assets/Slices.png" MaxWidth="95"/>
                        </Button>
                        <TextBlock x:Name="Control2Output" Margin="8,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </local:ControlExample.Example>
                <local:ControlExample.Xaml>
                    <RichTextBlock>
                        <Paragraph>&lt;Button Content="Button" Click="Button_Click"/&gt;</Paragraph>
                        <Paragraph TextIndent="12">
                            <Bold>&lt;Image Source="/Assets/Slices.png" /&gt;</Bold>
                        </Paragraph>
                        <Paragraph>&lt;/Button&gt;</Paragraph>
                    </RichTextBlock>
                </local:ControlExample.Xaml>
            </local:ControlExample>
        </StackPanel>

        <StackPanel x:Name="RightColumn">
            <local:ControlExample x:Name="Example3" HeaderText="A Button with a custom style.">
                <local:ControlExample.Example>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="Button3" Content="Button" Click="Button_Click" Style="{StaticResource customButtonStyle}"/>
                        <TextBlock x:Name="Control3Output" Margin="8,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </local:ControlExample.Example>
                <local:ControlExample.Xaml>
                    <RichTextBlock>
                        <Paragraph>&lt;Button Content="Button" Click="Button_Click"</Paragraph>
                        <Paragraph TextIndent="12">
                            <Bold>Style="{StaticResource customButtonStyle}"</Bold> /&gt;
                        </Paragraph>
                    </RichTextBlock>
                </local:ControlExample.Xaml>
            </local:ControlExample>

            <local:ControlExample x:Name="Example4" HeaderText="A Button with a custom template." RelativePanel.AlignLeftWith="Example3" RelativePanel.Below="Example3">
                <local:ControlExample.Example>
                    <StackPanel Orientation="Horizontal" >
                        <Button x:Name="Button4" Click="Button_Click" Style="{StaticResource RefreshButtonStyle}" Content="Refresh"/>
                        <TextBlock x:Name="Control4Output" Margin="8,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </local:ControlExample.Example>
                <local:ControlExample.Xaml>
                    <RichTextBlock>
                        <Paragraph>&lt;Button Content="Button" Click="Button_Click"/&gt;</Paragraph>
                        <Paragraph TextIndent="12">
                            <Bold>Style="{StaticResource refreshButtonStyle}"</Bold> /&gt;
                        </Paragraph>
                    </RichTextBlock>
                </local:ControlExample.Xaml>
            </local:ControlExample>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <!-- Visual states reflect the application's window size -->
            <VisualStateGroup>
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="768" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RightColumn.(RelativePanel.RightOf)" Value="LeftColumn" />
                        <Setter Target="RightColumn.Margin" Value="24,0,0,0" />
                        <Setter Target="Example4.Margin" Value="0,10,0,0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RightColumn.(RelativePanel.Below)" Value="LeftColumn" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>