<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="AppUIBasics.ControlPages.FlyoutPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppUIBasics.ControlPages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Flyout x:Key="SharedFlyout">
            <StackPanel>
                <TextBlock Text="This Flyout is shared."/>
            </StackPanel>
        </Flyout>
    </Page.Resources>

    <RelativePanel HorizontalAlignment="Left">
        <local:ControlExample x:Name="Example1" HeaderText="A Button with a Flyout." MaxWidth="500">
            <local:ControlExample.Example>
                <Button x:Name="Control1" Content="Empty cart">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All items will be removed. Do you want to continue?" Margin="0,0,0,12" />
                                <Button Click="DeleteConfirmation_Click" Content="Yes, empty my cart" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <RichTextBlock>
                    <Paragraph>&lt;Button Content="Empty cart"&gt;</Paragraph>
                    <Paragraph TextIndent="12">&lt;Button.Flyout&gt;</Paragraph>
                    <Paragraph TextIndent="24">&lt;Flyout&gt;</Paragraph>
                    <Paragraph TextIndent="36">&lt;StackPanel&gt;</Paragraph>
                    <Paragraph TextIndent="48">&lt;TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All items will be removed. Do you want to continue?" Margin="0,0,0,12" /&gt;</Paragraph>
                    <Paragraph TextIndent="48">&lt;Button Click="DeleteConfirmation_Click" Content="Yes, empty my cart" /&gt;</Paragraph>
                    <Paragraph TextIndent="36">&lt;/StackPanel&gt;</Paragraph>
                    <Paragraph TextIndent="24">&lt;/Flyout&gt;</Paragraph>
                    <Paragraph TextIndent="12">&lt;/Button.Flyout&gt;</Paragraph>
                    <Paragraph>&lt;/Button&gt;</Paragraph>
                </RichTextBlock>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample x:Name="Example2" HeaderText="A TextBlock with a Flyout." MaxWidth="500" RelativePanel.Below="Example1">
            <local:ControlExample.Example>
                <TextBlock Text="{x:Bind MyTextBox.Text, Mode=OneWay}" Tapped="Element_Tapped" FontSize="18">
                    <FlyoutBase.AttachedFlyout>
                        <Flyout>
                            <TextBox x:Name="MyTextBox" Text="You can edit this text by tapping it."/>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </TextBlock>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <RichTextBlock>
                    <Paragraph>&lt;TextBlock Text="{x:Bind MyTextBox.Text, Mode=OneWay}" Tapped="Element_Tapped" FontSize="18"&gt;</Paragraph>
                    <Paragraph TextIndent="12">&lt;FlyoutBase.AttachedFlyout&gt;</Paragraph>
                    <Paragraph TextIndent="24">&lt;Flyout&gt;</Paragraph>
                    <Paragraph TextIndent="36">&lt;TextBox x:Name="MyTextBox" Text="You can edit this text by tapping it."/&gt;</Paragraph>
                    <Paragraph TextIndent="24">&lt;/Flyout&gt;</Paragraph>
                    <Paragraph TextIndent="12">&lt;/FlyoutBase.AttachedFlyout&gt;</Paragraph>
                    <Paragraph >&lt;/TextBlock&gt;</Paragraph>
                </RichTextBlock>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample x:Name="Example3" HeaderText="A Button and a TextBlock sharing the same Flyout." MaxWidth="500" ExampleHeight="Auto">
            <local:ControlExample.Example>
                <StackPanel Orientation="Horizontal">
                    <Button Content="Click to show Flyout" Flyout="{StaticResource SharedFlyout}"/>
                    <TextBlock Tapped="Element_Tapped" Style="{ThemeResource BaseTextBlockStyle}" Margin="30,0,0,0"
                               Text="Tap to show Flyout" FlyoutBase.AttachedFlyout="{StaticResource SharedFlyout}"/>
                </StackPanel>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <RichTextBlock>
                    <Paragraph>&lt;Button Content="Click to show Flyout"</Paragraph>
                    <Paragraph TextIndent="12">
                        <Bold>Flyout="{StaticResource SharedFlyout}"</Bold> /&gt;"
                    </Paragraph>
                    <Paragraph>&lt;TextBlock Text="Tap to show Flyout" Tapped="Element_Tapped"</Paragraph>
                    <Paragraph TextIndent="12">
                        <Bold>FlyoutBase.AttachedFlyout="{StaticResource SharedFlyout}"</Bold> /&gt;"
                    </Paragraph>
                </RichTextBlock>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <VisualStateManager.VisualStateGroups>
            <!-- Visual states reflect the application's window size -->
            <VisualStateGroup>
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Example3.(RelativePanel.RightOf)" Value="Example1" />
                        <Setter Target="Example3.(RelativePanel.AlignTopWith)" Value="Example1" />
                        <Setter Target="Example3.(RelativePanel.AlignBottomWith)" Value="Example1" />
                        <Setter Target="Example3.Margin" Value="24,0,0,0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Below768Layout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Example3.(RelativePanel.Below)" Value="Example2" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>